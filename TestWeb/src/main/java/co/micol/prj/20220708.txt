MVC 패턴
	모든 request(요청)를 Controller가 받음 => 확인 후 적절한 Command 선별
	init => 요청과 Command 를 mapping(연결해줌)
		servlet annotation을 달고 있는 파일들 => 서블릿 컨테이너에 탑재
	
	요청이 들어오면 init에서 Mapping해준 Command 확인 후 Service로 이동
	
	*Command : Interface
		커맨드를 수행해서 자신을 초기화함(객체 생성이 불가능하기 때문에)
	
	viewResolve => 컨트롤러가 작업을 수행한 후에 보여줄 페이지를 선택하는 부분
	
FrontController : request 분석, 적절한 Command 실행, viewPage 선택
Model : vo를 통해서 데이터를 주고받음
View : 보여주는 페이지(jsp)

======================

MemberService Interface
	=> 인터페이스 : 메소드 형태만 가지고 있으면 됨
	=> 기능 설계를 먼저 해서(넣고싶은 기능을) 전부 미리 만들어두는게 중요함
	
sql 문 대문자로 바꾸기 : 소문자 입력 후 ctrl + shift + x

순서

1. 객체 생성
2. vo 선언
3. sql 작성
4. Connection 만들기(try~catch~finally)

★★ input tag에서
   id = javaScript에서 사용할 변수명
   name = java에서 사용할 변수명
   꼭 지정해줘야함!!

required : 필수 입력

session 값을 그대로 EL 표현식으로 해주면 됨 (main.jsp)


중복체크 : Ajax 사용(중복이 존재하지 않으면 바로 그 창에서 사용할 수 있도록 알려주고 처리)
Ajax
1. xhtp 객체 사용
2. fetch



JavaScript는 나중에 해석해도 ok => form을 그린 후에 작성

validation : DataBase까지 갔다오면 처리할 게 너무 많아서
			 JavaScript 단에서 먼저 처리하도록 validation 함수를 만들어주는게 좋다


보통 validation을 단위별로 처리하지 않고 required 옵션을 줘서 처리하긴함..



Project Run As Server =>
	1) web.xml에서 index.jsp 호출
	2) index.jsp => main.do 로 가도록 forwarding
	3) FrontController에 main.do가 요청됨
		>> map에 의해 Command 호출(MainCommand)
		>> 











